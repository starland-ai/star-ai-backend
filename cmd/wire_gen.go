// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"starland-backend/configs"
	"starland-backend/internal/biz"
	"starland-backend/internal/data"
	"starland-backend/internal/service"
	"starland-backend/internal/service/account"
	"starland-backend/internal/service/character"
)

// Injectors from wire.go:

// initApp
func initApp(cfg *configs.Config) (*service.Service, error) {
	dataData := data.NewData(cfg)
	accountRepo := data.NewAccountRepo(cfg, dataData)
	accountAndActivitySerClientUsecase := biz.NewAccountUsecase(cfg, accountRepo)
	accountService := account.NewAccountService(cfg, accountAndActivitySerClientUsecase)
	imageModelRepo := data.NewImageModelRepo(cfg, dataData)
	imageModelUsecase := biz.NewImageModelUsecase(cfg, imageModelRepo)
	characterRepo := data.NewCharacterRepo(cfg, dataData)
	characterAccountLikesRepo := data.NewCharacterAccountLikesRepo(cfg, dataData)
	characterUsecase := biz.NewCharacterUsecase(cfg, characterRepo, characterAccountLikesRepo)
	conversationRepo := data.NewConversationRepo(cfg, dataData)
	conversationUsecase := biz.NewConversationUsecase(cfg, conversationRepo)
	characterVoiceRepo := data.NewCharacterVoiceRepo(cfg, dataData)
	characterVoiceUsecase := biz.NewCharacterVoiceUsecase(cfg, characterVoiceRepo)
	characterService := character.NewCharacterService(cfg, imageModelUsecase, characterUsecase, accountAndActivitySerClientUsecase, conversationUsecase, characterVoiceUsecase)
	serviceService := service.NewService(accountService, characterService)
	return serviceService, nil
}
